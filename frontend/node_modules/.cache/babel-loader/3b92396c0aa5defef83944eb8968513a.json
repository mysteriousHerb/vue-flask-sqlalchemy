{"remainingRequest":"C:\\Users\\My Pc\\Documents\\GitHub\\vue-flask-sqlalchemy\\frontend\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\My Pc\\Documents\\GitHub\\vue-flask-sqlalchemy\\frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\My Pc\\Documents\\GitHub\\vue-flask-sqlalchemy\\frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\My Pc\\Documents\\GitHub\\vue-flask-sqlalchemy\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\My Pc\\Documents\\GitHub\\vue-flask-sqlalchemy\\frontend\\node_modules\\vue-awesome\\components\\Icon.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\My Pc\\Documents\\GitHub\\vue-flask-sqlalchemy\\frontend\\node_modules\\vue-awesome\\components\\Icon.vue","mtime":499162500000},{"path":"C:\\Users\\My Pc\\Documents\\GitHub\\vue-flask-sqlalchemy\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1560457563834},{"path":"C:\\Users\\My Pc\\Documents\\GitHub\\vue-flask-sqlalchemy\\frontend\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1560457579908},{"path":"C:\\Users\\My Pc\\Documents\\GitHub\\vue-flask-sqlalchemy\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1560457563473},{"path":"C:\\Users\\My Pc\\Documents\\GitHub\\vue-flask-sqlalchemy\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1560457563834},{"path":"C:\\Users\\My Pc\\Documents\\GitHub\\vue-flask-sqlalchemy\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1560457580480}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.to-string\";\nimport _toConsumableArray from \"C:\\\\Users\\\\My Pc\\\\Documents\\\\GitHub\\\\vue-flask-sqlalchemy\\\\frontend\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/toConsumableArray\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport _defineProperty from \"C:\\\\Users\\\\My Pc\\\\Documents\\\\GitHub\\\\vue-flask-sqlalchemy\\\\frontend\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/defineProperty\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.number.constructor\";\nvar icons = {};\nexport default {\n  name: 'fa-icon',\n  props: {\n    name: {\n      type: String,\n      validator: function validator(val) {\n        if (val && !(val in icons)) {\n          console.warn(\"Invalid prop: prop \\\"name\\\" is referring to an unregistered icon \\\"\".concat(val, \"\\\".\") + \"\\nPlease make sure you have imported this icon before using it.\");\n          return false;\n        }\n\n        return true;\n      }\n    },\n    title: String,\n    scale: [Number, String],\n    spin: Boolean,\n    inverse: Boolean,\n    pulse: Boolean,\n    flip: {\n      validator: function validator(val) {\n        return val === 'horizontal' || val === 'vertical';\n      }\n    },\n    label: String,\n    tabindex: [Number, String]\n  },\n  data: function data() {\n    return {\n      id: getId(),\n      x: false,\n      y: false,\n      childrenWidth: 0,\n      childrenHeight: 0,\n      outerScale: 1\n    };\n  },\n  computed: {\n    normalizedScale: function normalizedScale() {\n      var scale = this.scale;\n      scale = typeof scale === 'undefined' ? 1 : Number(scale);\n\n      if (isNaN(scale) || scale <= 0) {\n        console.warn(\"Invalid prop: prop \\\"scale\\\" should be a number over 0.\", this);\n        return this.outerScale;\n      }\n\n      return scale * this.outerScale;\n    },\n    klass: function klass() {\n      return _defineProperty({\n        'fa-icon': true,\n        'fa-spin': this.spin,\n        'fa-flip-horizontal': this.flip === 'horizontal',\n        'fa-flip-vertical': this.flip === 'vertical',\n        'fa-inverse': this.inverse,\n        'fa-pulse': this.pulse\n      }, this.$options.name, true);\n    },\n    icon: function icon() {\n      if (this.name) {\n        return icons[this.name];\n      }\n\n      return null;\n    },\n    box: function box() {\n      if (this.icon) {\n        return \"0 0 \".concat(this.icon.width, \" \").concat(this.icon.height);\n      }\n\n      return \"0 0 \".concat(this.width, \" \").concat(this.height);\n    },\n    ratio: function ratio() {\n      if (!this.icon) {\n        return 1;\n      }\n\n      var _this$icon = this.icon,\n          width = _this$icon.width,\n          height = _this$icon.height;\n      return Math.max(width, height) / 16;\n    },\n    width: function width() {\n      return this.childrenWidth || this.icon && this.icon.width / this.ratio * this.normalizedScale || 0;\n    },\n    height: function height() {\n      return this.childrenHeight || this.icon && this.icon.height / this.ratio * this.normalizedScale || 0;\n    },\n    style: function style() {\n      if (this.normalizedScale === 1) {\n        return false;\n      }\n\n      return {\n        fontSize: this.normalizedScale + 'em'\n      };\n    },\n    raw: function raw() {\n      // generate unique id for each icon's SVG element with ID\n      if (!this.icon || !this.icon.raw) {\n        return null;\n      }\n\n      var raw = this.icon.raw;\n      var ids = {};\n      raw = raw.replace(/\\s(?:xml:)?id=([\"']?)([^\"')\\s]+)\\1/g, function (match, quote, id) {\n        var uniqueId = getId();\n        ids[id] = uniqueId;\n        return \" id=\\\"\".concat(uniqueId, \"\\\"\");\n      });\n      raw = raw.replace(/#(?:([^'\")\\s]+)|xpointer\\(id\\((['\"]?)([^')]+)\\2\\)\\))/g, function (match, rawId, _, pointerId) {\n        var id = rawId || pointerId;\n\n        if (!id || !ids[id]) {\n          return match;\n        }\n\n        return \"#\".concat(ids[id]);\n      });\n      return raw;\n    },\n    focusable: function focusable() {\n      var tabindex = this.tabindex;\n\n      if (tabindex == null) {\n        return 'false';\n      }\n\n      var index = typeof tabindex === 'string' ? parseInt(tabindex, 10) : tabindex;\n\n      if (index >= 0) {\n        return null;\n      }\n\n      return 'false';\n    }\n  },\n  mounted: function mounted() {\n    this.updateStack();\n  },\n  updated: function updated() {\n    this.updateStack();\n  },\n  methods: {\n    updateStack: function updateStack() {\n      var _this = this;\n\n      if (!this.name && this.name !== null && this.$children.length === 0) {\n        console.warn(\"Invalid prop: prop \\\"name\\\" is required.\");\n        return;\n      }\n\n      if (this.icon) {\n        return;\n      }\n\n      var width = 0;\n      var height = 0;\n      this.$children.forEach(function (child) {\n        child.outerScale = _this.normalizedScale;\n        width = Math.max(width, child.width);\n        height = Math.max(height, child.height);\n      });\n      this.childrenWidth = width;\n      this.childrenHeight = height;\n      this.$children.forEach(function (child) {\n        child.x = (width - child.width) / 2;\n        child.y = (height - child.height) / 2;\n      });\n    }\n  },\n  render: function render(h) {\n    if (this.name === null) {\n      return h();\n    }\n\n    var options = {\n      class: this.klass,\n      style: this.style,\n      attrs: {\n        role: this.$attrs.role || (this.label || this.title ? 'img' : null),\n        'aria-label': this.label || null,\n        'aria-hidden': String(!(this.label || this.title)),\n        tabindex: this.tabindex,\n        x: this.x,\n        y: this.y,\n        width: this.width,\n        height: this.height,\n        viewBox: this.box,\n        focusable: this.focusable\n      }\n    };\n    var titleId = \"vat-\".concat(this.id);\n\n    if (this.title) {\n      options.attrs['aria-labelledby'] = titleId;\n    }\n\n    if (this.raw) {\n      var html = this.raw;\n\n      if (this.title) {\n        html = \"<title id=\\\"\".concat(titleId, \"\\\">\").concat(escapeHTML(this.title), \"</title>\").concat(html);\n      }\n\n      options.domProps = {\n        innerHTML: html\n      };\n    }\n\n    var content = this.title ? [h('title', {\n      attrs: {\n        id: titleId\n      }\n    }, this.title)] : [];\n    return h('svg', options, this.raw ? null : content.concat(this.$slots.default || [].concat(_toConsumableArray(this.icon.paths.map(function (path, i) {\n      return h('path', {\n        attrs: path,\n        key: \"path-\".concat(i)\n      });\n    })), _toConsumableArray(this.icon.polygons.map(function (polygon, i) {\n      return h('polygon', {\n        attrs: polygon,\n        key: \"polygon-\".concat(i)\n      });\n    })))));\n  },\n  register: function register(data) {\n    for (var name in data) {\n      var icon = data[name];\n      var _icon$paths = icon.paths,\n          paths = _icon$paths === void 0 ? [] : _icon$paths,\n          d = icon.d,\n          _icon$polygons = icon.polygons,\n          polygons = _icon$polygons === void 0 ? [] : _icon$polygons,\n          points = icon.points;\n\n      if (d) {\n        paths.push({\n          d: d\n        });\n      }\n\n      if (points) {\n        polygons.push({\n          points: points\n        });\n      }\n\n      icons[name] = assign({}, icon, {\n        paths: paths,\n        polygons: polygons\n      });\n    }\n  },\n  icons: icons\n};\n\nfunction assign(obj) {\n  for (var _len = arguments.length, sources = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    sources[_key - 1] = arguments[_key];\n  }\n\n  sources.forEach(function (source) {\n    for (var key in source) {\n      if (source.hasOwnProperty(key)) {\n        obj[key] = source[key];\n      }\n    }\n  });\n  return obj;\n}\n\nvar cursor = 0xd4937;\n\nfunction getId() {\n  return \"va-\".concat((cursor++).toString(16));\n}\n\nvar ESCAPE_MAP = {\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  '&': '&amp;'\n};\n\nfunction escapeHTML(html) {\n  return html.replace(/[<>\"&]/g, function (c) {\n    return ESCAPE_MAP[c] || c;\n  });\n}",{"version":3,"sources":["Icon.vue"],"names":[],"mappings":"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","sourcesContent":["<script>\nlet icons = {}\n\nexport default {\n  name: 'fa-icon',\n  props: {\n    name: {\n      type: String,\n      validator (val) {\n        if (val && !(val in icons)) {\n          console.warn(\n            `Invalid prop: prop \"name\" is referring to an unregistered icon \"${val}\".` +\n              `\\nPlease make sure you have imported this icon before using it.`\n          )\n          return false\n        }\n        return true\n      }\n    },\n    title: String,\n    scale: [Number, String],\n    spin: Boolean,\n    inverse: Boolean,\n    pulse: Boolean,\n    flip: {\n      validator (val) {\n        return val === 'horizontal' || val === 'vertical'\n      }\n    },\n    label: String,\n    tabindex: [Number, String]\n  },\n  data () {\n    return {\n      id: getId(),\n      x: false,\n      y: false,\n      childrenWidth: 0,\n      childrenHeight: 0,\n      outerScale: 1\n    }\n  },\n  computed: {\n    normalizedScale () {\n      let scale = this.scale\n      scale = typeof scale === 'undefined' ? 1 : Number(scale)\n      if (isNaN(scale) || scale <= 0) {\n        console.warn(\n          `Invalid prop: prop \"scale\" should be a number over 0.`,\n          this\n        )\n        return this.outerScale\n      }\n      return scale * this.outerScale\n    },\n    klass () {\n      return {\n        'fa-icon': true,\n        'fa-spin': this.spin,\n        'fa-flip-horizontal': this.flip === 'horizontal',\n        'fa-flip-vertical': this.flip === 'vertical',\n        'fa-inverse': this.inverse,\n        'fa-pulse': this.pulse,\n        [this.$options.name]: true\n      }\n    },\n    icon () {\n      if (this.name) {\n        return icons[this.name]\n      }\n      return null\n    },\n    box () {\n      if (this.icon) {\n        return `0 0 ${this.icon.width} ${this.icon.height}`\n      }\n      return `0 0 ${this.width} ${this.height}`\n    },\n    ratio () {\n      if (!this.icon) {\n        return 1\n      }\n      let { width, height } = this.icon\n      return Math.max(width, height) / 16\n    },\n    width () {\n      return (\n        this.childrenWidth ||\n        (this.icon && (this.icon.width / this.ratio) * this.normalizedScale) ||\n        0\n      )\n    },\n    height () {\n      return (\n        this.childrenHeight ||\n        (this.icon && (this.icon.height / this.ratio) * this.normalizedScale) ||\n        0\n      )\n    },\n    style () {\n      if (this.normalizedScale === 1) {\n        return false\n      }\n      return {\n        fontSize: this.normalizedScale + 'em'\n      }\n    },\n    raw () {\n      // generate unique id for each icon's SVG element with ID\n      if (!this.icon || !this.icon.raw) {\n        return null\n      }\n      let raw = this.icon.raw\n      let ids = {}\n      raw = raw.replace(\n        /\\s(?:xml:)?id=([\"']?)([^\"')\\s]+)\\1/g,\n        (match, quote, id) => {\n          let uniqueId = getId()\n          ids[id] = uniqueId\n          return ` id=\"${uniqueId}\"`\n        }\n      )\n      raw = raw.replace(\n        /#(?:([^'\")\\s]+)|xpointer\\(id\\((['\"]?)([^')]+)\\2\\)\\))/g,\n        (match, rawId, _, pointerId) => {\n          let id = rawId || pointerId\n          if (!id || !ids[id]) {\n            return match\n          }\n\n          return `#${ids[id]}`\n        }\n      )\n\n      return raw\n    },\n    focusable () {\n      let { tabindex } = this\n      if (tabindex == null) {\n        return 'false'\n      }\n      let index =\n        typeof tabindex === 'string' ? parseInt(tabindex, 10) : tabindex\n      if (index >= 0) {\n        return null\n      }\n      return 'false'\n    }\n  },\n  mounted () {\n    this.updateStack()\n  },\n  updated () {\n    this.updateStack()\n  },\n  methods: {\n    updateStack () {\n      if (!this.name && this.name !== null && this.$children.length === 0) {\n        console.warn(`Invalid prop: prop \"name\" is required.`)\n        return\n      }\n\n      if (this.icon) {\n        return\n      }\n\n      let width = 0\n      let height = 0\n      this.$children.forEach(child => {\n        child.outerScale = this.normalizedScale\n\n        width = Math.max(width, child.width)\n        height = Math.max(height, child.height)\n      })\n      this.childrenWidth = width\n      this.childrenHeight = height\n      this.$children.forEach(child => {\n        child.x = (width - child.width) / 2\n        child.y = (height - child.height) / 2\n      })\n    }\n  },\n  render (h) {\n    if (this.name === null) {\n      return h()\n    }\n\n    let options = {\n      class: this.klass,\n      style: this.style,\n      attrs: {\n        role: this.$attrs.role || (this.label || this.title ? 'img' : null),\n        'aria-label': this.label || null,\n        'aria-hidden': String(!(this.label || this.title)),\n        tabindex: this.tabindex,\n        x: this.x,\n        y: this.y,\n        width: this.width,\n        height: this.height,\n        viewBox: this.box,\n        focusable: this.focusable\n      }\n    }\n\n    let titleId = `vat-${this.id}`\n    if (this.title) {\n      options.attrs['aria-labelledby'] = titleId\n    }\n\n    if (this.raw) {\n      let html = this.raw\n\n      if (this.title) {\n        html = `<title id=\"${titleId}\">${escapeHTML(this.title)}</title>${html}`\n      }\n\n      options.domProps = {\n        innerHTML: html\n      }\n    }\n\n    let content = this.title\n      ? [h('title', { attrs: { id: titleId } }, this.title)]\n      : []\n\n    return h(\n      'svg',\n      options,\n      this.raw\n        ? null\n        : content.concat(\n          this.$slots.default || [\n            ...this.icon.paths.map((path, i) =>\n              h('path', {\n                attrs: path,\n                key: `path-${i}`\n              })\n            ),\n            ...this.icon.polygons.map((polygon, i) =>\n              h('polygon', {\n                attrs: polygon,\n                key: `polygon-${i}`\n              })\n            )\n          ]\n        )\n    )\n  },\n  register (data) {\n    for (let name in data) {\n      let icon = data[name]\n      let { paths = [], d, polygons = [], points } = icon\n\n      if (d) {\n        paths.push({ d })\n      }\n\n      if (points) {\n        polygons.push({ points })\n      }\n\n      icons[name] = assign({}, icon, {\n        paths,\n        polygons\n      })\n    }\n  },\n  icons\n}\n\nfunction assign (obj, ...sources) {\n  sources.forEach(source => {\n    for (let key in source) {\n      if (source.hasOwnProperty(key)) {\n        obj[key] = source[key]\n      }\n    }\n  })\n\n  return obj\n}\n\nlet cursor = 0xd4937\nfunction getId () {\n  return `va-${(cursor++).toString(16)}`\n}\n\nconst ESCAPE_MAP = {\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  '&': '&amp;'\n}\n\nfunction escapeHTML (html) {\n  return html.replace(/[<>\"&]/g, c => ESCAPE_MAP[c] || c)\n}\n</script>\n\n<style>\n.fa-icon {\n  display: inline-block;\n  fill: currentColor;\n}\n\n.fa-flip-horizontal {\n  transform: scale(-1, 1);\n}\n\n.fa-flip-vertical {\n  transform: scale(1, -1);\n}\n\n.fa-spin {\n  animation: fa-spin 1s 0s infinite linear;\n}\n\n.fa-inverse {\n  color: #fff;\n}\n\n.fa-pulse {\n  animation: fa-spin 1s infinite steps(8);\n}\n\n@keyframes fa-spin {\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n}\n</style>\n"],"sourceRoot":"node_modules/vue-awesome/components"}]}