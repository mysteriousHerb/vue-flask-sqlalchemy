{"remainingRequest":"C:\\Users\\My Pc\\Documents\\GitHub\\vue-flask-sqlalchemy\\frontend\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\My Pc\\Documents\\GitHub\\vue-flask-sqlalchemy\\frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\My Pc\\Documents\\GitHub\\vue-flask-sqlalchemy\\frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\My Pc\\Documents\\GitHub\\vue-flask-sqlalchemy\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\My Pc\\Documents\\GitHub\\vue-flask-sqlalchemy\\frontend\\src\\components\\GenSessionID.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\My Pc\\Documents\\GitHub\\vue-flask-sqlalchemy\\frontend\\src\\components\\GenSessionID.vue","mtime":1561283540026},{"path":"C:\\Users\\My Pc\\Documents\\GitHub\\vue-flask-sqlalchemy\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1560457563834},{"path":"C:\\Users\\My Pc\\Documents\\GitHub\\vue-flask-sqlalchemy\\frontend\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1560457579908},{"path":"C:\\Users\\My Pc\\Documents\\GitHub\\vue-flask-sqlalchemy\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1560457563473},{"path":"C:\\Users\\My Pc\\Documents\\GitHub\\vue-flask-sqlalchemy\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1560457563834},{"path":"C:\\Users\\My Pc\\Documents\\GitHub\\vue-flask-sqlalchemy\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1560457580480}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: \"GenSessionID\",\n  props: {},\n  data: function data() {\n    return {\n      id_length: 50\n    };\n  },\n  created: function created() {\n    var _this = this;\n\n    window.addEventListener('beforeunload', function () {\n      _this.clean_up_session();\n    }, false);\n  },\n  computed: {\n    session_id: function session_id() {\n      // session_id should be sent to all the axios request to backend now\n      return this.$store.state.session_id;\n    }\n  },\n  mounted: function mounted() {\n    this.generate_session_id();\n    this.initialise_session();\n  },\n  methods: {\n    generate_session_id: function generate_session_id() {\n      // https://gist.github.com/6174/6062387\n      this.$store.dispatch(\"generate_session_id\");\n    },\n    initialise_session: function initialise_session() {\n      // called on the first time launching\n      this.axios({\n        url: this.$API_URL + \"/initialise_session\",\n        method: \"POST\",\n        data: {\n          session_id: this.session_id\n        }\n      });\n    },\n    clean_up_session: function clean_up_session() {\n      console.log('removing the folder'); // called before closing the browser\n\n      this.axios({\n        url: this.$API_URL + \"/clean_up_session\",\n        method: \"POST\",\n        data: {\n          session_id: this.session_id\n        }\n      });\n    },\n    check_session: function check_session() {\n      // called before closing the browser\n      this.axios({\n        url: this.$API_URL + \"/check_session\",\n        method: \"POST\",\n        data: {\n          session_id: this.session_id\n        }\n      }).then(function (response) {\n        console.log(response.data.session_id);\n      });\n    }\n  }\n};",{"version":3,"sources":["GenSessionID.vue"],"names":[],"mappings":";;;;;;;;;;AAWA,eAAA;AACA,EAAA,IAAA,EAAA,cADA;AAEA,EAAA,KAAA,EAAA,EAFA;AAGA,EAAA,IAAA,EAAA,gBAAA;AACA,WAAA;AACA,MAAA,SAAA,EAAA;AADA,KAAA;AAGA,GAPA;AAQA,EAAA,OARA,qBAQA;AAAA;;AACA,IAAA,MAAA,CAAA,gBAAA,CAAA,cAAA,EAAA,YAAA;AACA,MAAA,KAAA,CAAA,gBAAA;AACA,KAFA,EAEA,KAFA;AAGA,GAZA;AAaA,EAAA,QAAA,EAAA;AACA,IAAA,UADA,wBACA;AACA;AACA,aAAA,KAAA,MAAA,CAAA,KAAA,CAAA,UAAA;AACA;AAJA,GAbA;AAmBA,EAAA,OAAA,EAAA,mBAAA;AACA,SAAA,mBAAA;AACA,SAAA,kBAAA;AACA,GAtBA;AAuBA,EAAA,OAAA,EAAA;AACA,IAAA,mBAAA,EAAA,+BAAA;AACA;AACA,WAAA,MAAA,CAAA,QAAA,CAAA,qBAAA;AACA,KAJA;AAKA,IAAA,kBAAA,EAAA,8BAAA;AACA;AACA,WAAA,KAAA,CAAA;AACA,QAAA,GAAA,EAAA,KAAA,QAAA,GAAA,qBADA;AAEA,QAAA,MAAA,EAAA,MAFA;AAGA,QAAA,IAAA,EAAA;AACA,UAAA,UAAA,EAAA,KAAA;AADA;AAHA,OAAA;AAOA,KAdA;AAeA,IAAA,gBAAA,EAAA,4BAAA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,qBAAA,EADA,CAEA;;AACA,WAAA,KAAA,CAAA;AACA,QAAA,GAAA,EAAA,KAAA,QAAA,GAAA,mBADA;AAEA,QAAA,MAAA,EAAA,MAFA;AAGA,QAAA,IAAA,EAAA;AACA,UAAA,UAAA,EAAA,KAAA;AADA;AAHA,OAAA;AAOA,KAzBA;AA0BA,IAAA,aAAA,EAAA,yBAAA;AACA;AACA,WAAA,KAAA,CAAA;AACA,QAAA,GAAA,EAAA,KAAA,QAAA,GAAA,gBADA;AAEA,QAAA,MAAA,EAAA,MAFA;AAGA,QAAA,IAAA,EAAA;AACA,UAAA,UAAA,EAAA,KAAA;AADA;AAHA,OAAA,EAMA,IANA,CAMA,UAAA,QAAA,EAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,QAAA,CAAA,IAAA,CAAA,UAAA;AACA,OARA;AASA;AArCA;AAvBA,CAAA","sourcesContent":["<template>\n  <div>\n    <v-container fluid>\n      <v-layout justify-center>\n        <v-btn @click=\"check_session\">check session</v-btn>\n      </v-layout>\n    </v-container>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"GenSessionID\",\n  props: {},\n  data: function() {\n    return {\n      id_length: 50\n    };\n  },\ncreated() {\n        window.addEventListener('beforeunload', () => {\n            this.clean_up_session()\n        }, false)\n    },\n  computed: {\n    session_id () {\n        // session_id should be sent to all the axios request to backend now\n      return this.$store.state.session_id;\n    }\n  },\n  mounted: function() {\n    this.generate_session_id();\n    this.initialise_session();\n  },\n  methods: {\n    generate_session_id: function() {\n      // https://gist.github.com/6174/6062387\n      this.$store.dispatch(\"generate_session_id\");\n    },\n    initialise_session: function() {\n      // called on the first time launching\n      this.axios({\n        url: this.$API_URL + \"/initialise_session\",\n        method: \"POST\",\n        data: {\n          session_id: this.session_id\n        }\n      });\n    },\n    clean_up_session: function() {\n        console.log('removing the folder')\n      // called before closing the browser\n      this.axios({\n        url: this.$API_URL + \"/clean_up_session\",\n        method: \"POST\",\n        data: {\n          session_id: this.session_id\n        }\n      });\n    },\n    check_session: function() {\n      // called before closing the browser\n      this.axios({\n        url: this.$API_URL + \"/check_session\",\n        method: \"POST\",\n        data: {\n          session_id: this.session_id\n        }\n      }).then(response=>{\n          console.log(response.data.session_id)\n      });\n    }\n  }\n};\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\nh3 {\n  margin: 40px 0 0;\n}\nul {\n  list-style-type: none;\n  padding: 0;\n}\nli {\n  display: inline-block;\n  margin: 0 10px;\n}\na {\n  color: #42b983;\n}\n</style>\n"],"sourceRoot":"src/components"}]}