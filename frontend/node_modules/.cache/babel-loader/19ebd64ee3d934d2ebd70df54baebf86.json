{"remainingRequest":"C:\\Users\\My Pc\\Documents\\GitHub\\vue-flask-sqlalchemy\\frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\My Pc\\Documents\\GitHub\\vue-flask-sqlalchemy\\frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\My Pc\\Documents\\GitHub\\vue-flask-sqlalchemy\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\My Pc\\Documents\\GitHub\\vue-flask-sqlalchemy\\frontend\\src\\components\\upload_download.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\My Pc\\Documents\\GitHub\\vue-flask-sqlalchemy\\frontend\\src\\components\\upload_download.vue","mtime":1560666699643},{"path":"C:\\Users\\My Pc\\Documents\\GitHub\\vue-flask-sqlalchemy\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1560457563834},{"path":"C:\\Users\\My Pc\\Documents\\GitHub\\vue-flask-sqlalchemy\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1560457563473},{"path":"C:\\Users\\My Pc\\Documents\\GitHub\\vue-flask-sqlalchemy\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1560457563834},{"path":"C:\\Users\\My Pc\\Documents\\GitHub\\vue-flask-sqlalchemy\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1560457580480}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport vue2Dropzone from \"vue2-dropzone\";\nimport \"vue2-dropzone/dist/vue2Dropzone.min.css\";\nimport FileSaver from \"file-saver\"; // import axios from \"axios\";\n\nexport default {\n  name: \"upload_download\",\n  components: {\n    // https://itnext.io/vue-a-pattern-for-idiomatic-performant-component-registration-you-might-not-know-about-9f3c091846f5?gi=4351204c93b8\n    //  https://stackoverflow.com/questions/52038615/in-vue-js-why-do-we-have-to-export-components-after-importing-them\n    // https://alligator.io/vuejs/vue-dropzone/\n    // https://rowanwins.github.io/vue-dropzone/docs/dist/#/events\n    vueDropzone: vue2Dropzone\n  },\n  data: function data() {\n    return {\n      // dropzone settings\n      dropzoneOptions: {\n        url: this.$API_URL + \"/upload_file\",\n        addRemoveLinks: true,\n        thumbnailWidth: 150,\n        maxFilesize: 0.5,\n        maxFiles: 4,\n        dictDefaultMessage: \"<i class='fa fa-cloud-upload'></i>UPLOAD ME\"\n      },\n      existing_files: [],\n      active_file: \"default.jpg\"\n    };\n  },\n  computed: {\n    image_location: function image_location() {\n      return this.$API_URL + \"/download_file/\" + this.active_file;\n    }\n  },\n  mounted: function mounted() {\n    this.read_existing_files();\n  },\n  methods: {\n    toggle: function toggle() {\n      console.log(this.existing_files);\n      this.axios({\n        url: this.$API_URL + \"/verify_descriptor\",\n        method: \"POST\",\n        data: {\n          user: \"test\",\n          descriptor: [1, 2, 3, 4, 5, 6]\n        }\n      }).then(function (response) {\n        var descriptor_json = {\n          descriptor_user: response.data[\"descriptor_user\"],\n          salt2: response.data[\"salt2\"]\n        };\n        console.log(descriptor_json); // https://stackoverflow.com/questions/16329293/save-json-string-to-client-pc-using-html5-api\n        // JSON.parse() takes a JSON string and transforms it into a JavaScript object.\n        // JSON.stringify() takes a JavaScript object and transforms it into a JSON string.\n        // NOTE: Javascript object needs to be JSON (a string) to communicate\n\n        var descriptor_json = JSON.stringify(descriptor_json);\n        var blob = new Blob([descriptor_json], {\n          type: \"application/json\"\n        });\n        FileSaver.saveAs(blob, \"key.json\");\n      });\n    },\n    read_existing_files: function read_existing_files() {\n      var _this = this;\n\n      this.axios({\n        url: this.$API_URL + \"/existing_files\",\n        method: \"GET\"\n      }).then(function (response) {\n        _this.existing_files = response.data;\n      });\n    },\n    removeAllFiles: function removeAllFiles() {\n      this.$refs.myVueDropzone.removeAllFiles();\n      console.log(this.$API_URL);\n    },\n    upload_complete: function upload_complete(file) {\n      console.log(\"uploaded\");\n      console.log(file[\"name\"]);\n    },\n    remove_file: function remove_file(file) {\n      // https://alligator.io/vuejs/rest-api-axios/\n      this.axios({\n        url: this.$API_URL + \"/upload_file\",\n        method: \"POST\",\n        data: {\n          remove_file: file[\"name\"]\n        }\n      }).then(function (response) {});\n    },\n    download_file: function download_file() {\n      // https://thewebtier.com/snippets/download-files-with-axios/\n      this.axios({\n        url: this.image_location,\n        method: \"GET\",\n        responseType: \"blob\" // important\n\n      }).then(function (response) {\n        // CORS headings - see backend\n        var filename = response.headers[\"x-suggested-filename\"];\n        var filetype = response.headers[\"x-suggested-filetype\"]; // var blob = new Blob([response.data], { type: \"image/png\" });\n\n        FileSaver.saveAs(new Blob([response.data]), filename + \".\" + filetype);\n      });\n    },\n    change_file: function change_file(name) {\n      this.active_file = name;\n    }\n  }\n};",{"version":3,"sources":["upload_download.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div>\r\n    <v-container grid-list-md text-xs-center fluid>\r\n      <v-layout align-center justify-center>\r\n        <v-flex xs12>\r\n          <vueDropzone\r\n            ref=\"myVueDropzone\"\r\n            id=\"myVueDropzone\"\r\n            @vdropzone-success=\"upload_complete\"\r\n            @vdropzone-removed-file=\"remove_file\"\r\n            :options=\"dropzoneOptions\"\r\n            :useCustomSlot=\"false\"\r\n          >\r\n            <div class=\"dropzone-custom-content\">\r\n              <h3 class=\"dropzone-custom-title\">Drag and drop to upload content!</h3>\r\n              <div class=\"subtitle\">...or click to select a file from your computer</div>\r\n            </div>\r\n          </vueDropzone>\r\n        </v-flex>\r\n      </v-layout>\r\n      <v-layout>\r\n        <v-flex>\r\n          <!-- custom function called with buttons -->\r\n          <v-btn @click=\"removeAllFiles\">Remove All Files</v-btn>\r\n\r\n          <v-btn @click=\"download_file\">Download file</v-btn>\r\n          <v-btn @click=\"toggle\">toggle</v-btn>\r\n        </v-flex>\r\n      </v-layout>\r\n      <br>\r\n      <v-layout align-center justify-center>\r\n        <v-flex xs10>\r\n          <!-- use :key to actively refresh this component https://michaelnthiessen.com/force-re-render -->\r\n          <v-img :src=\"image_location\" :key=\"active_file\"/>\r\n        </v-flex>\r\n      </v-layout>\r\n\r\n      <v-layout align-center justify-center>\r\n        <v-flex xs4>\r\n          <v-list>\r\n            <v-list-tile\r\n              v-for=\"file in existing_files\"\r\n              :key=\"file\"\r\n              @click=\"change_file(file)\"\r\n            >\r\n              <v-list-tile-content>\r\n                <v-list-tile-title v-text=\"file\"></v-list-tile-title>\r\n              </v-list-tile-content>\r\n            </v-list-tile>\r\n          </v-list>\r\n        </v-flex>\r\n      </v-layout>\r\n    </v-container>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport vue2Dropzone from \"vue2-dropzone\";\r\nimport \"vue2-dropzone/dist/vue2Dropzone.min.css\";\r\nimport FileSaver from \"file-saver\";\r\n\r\n// import axios from \"axios\";\r\n\r\nexport default {\r\n  name: \"upload_download\",\r\n  components: {\r\n    // https://itnext.io/vue-a-pattern-for-idiomatic-performant-component-registration-you-might-not-know-about-9f3c091846f5?gi=4351204c93b8\r\n    //  https://stackoverflow.com/questions/52038615/in-vue-js-why-do-we-have-to-export-components-after-importing-them\r\n    // https://alligator.io/vuejs/vue-dropzone/\r\n    // https://rowanwins.github.io/vue-dropzone/docs/dist/#/events\r\n    vueDropzone: vue2Dropzone\r\n  },\r\n  data: function() {\r\n    return {\r\n      // dropzone settings\r\n      dropzoneOptions: {\r\n        url: this.$API_URL + \"/upload_file\",\r\n        addRemoveLinks: true,\r\n        thumbnailWidth: 150,\r\n        maxFilesize: 0.5,\r\n        maxFiles: 4,\r\n        dictDefaultMessage: \"<i class='fa fa-cloud-upload'></i>UPLOAD ME\"\r\n      },\r\n      existing_files: [],\r\n      active_file: \"default.jpg\"\r\n    };\r\n  },\r\n  computed: {\r\n    image_location: function() {\r\n      return this.$API_URL + \"/download_file/\" + this.active_file;\r\n    }\r\n  },\r\n  mounted: function() {\r\n    this.read_existing_files();\r\n  },\r\n  methods: {\r\n    toggle: function() {\r\n      console.log(this.existing_files)\r\n      this.axios({\r\n        url: this.$API_URL + \"/verify_descriptor\",\r\n        method: \"POST\",\r\n        data: { user: \"test\", descriptor: [1, 2, 3, 4, 5, 6] }\r\n      }).then(response => {\r\n        var descriptor_json = {\r\n          descriptor_user: response.data[\"descriptor_user\"],\r\n          salt2: response.data[\"salt2\"]\r\n        };\r\n        console.log(descriptor_json);\r\n        // https://stackoverflow.com/questions/16329293/save-json-string-to-client-pc-using-html5-api\r\n        // JSON.parse() takes a JSON string and transforms it into a JavaScript object.\r\n        // JSON.stringify() takes a JavaScript object and transforms it into a JSON string.\r\n        // NOTE: Javascript object needs to be JSON (a string) to communicate\r\n        var descriptor_json = JSON.stringify(descriptor_json);\r\n        var blob = new Blob([descriptor_json], { type: \"application/json\" });\r\n        FileSaver.saveAs(blob, \"key.json\");\r\n      });\r\n    },\r\n    read_existing_files: function() {\r\n       this.axios({\r\n        url: this.$API_URL + \"/existing_files\",\r\n        method: \"GET\"\r\n      }).then(response => {this.existing_files = response.data}) \r\n    },\r\n\r\n    removeAllFiles: function() {\r\n      this.$refs.myVueDropzone.removeAllFiles();\r\n      console.log(this.$API_URL);\r\n    },\r\n    upload_complete: function(file) {\r\n      console.log(\"uploaded\");\r\n      console.log(file[\"name\"]);\r\n    },\r\n    remove_file: function(file) {\r\n      // https://alligator.io/vuejs/rest-api-axios/\r\n      this.axios({\r\n        url: this.$API_URL + \"/upload_file\",\r\n        method: \"POST\",\r\n        data: {\r\n          remove_file: file[\"name\"]\r\n        }\r\n      }).then(response => {});\r\n    },\r\n    download_file: function() {\r\n      // https://thewebtier.com/snippets/download-files-with-axios/\r\n      this.axios({\r\n        url: this.image_location,\r\n        method: \"GET\",\r\n        responseType: \"blob\" // important\r\n      }).then(response => {\r\n        // CORS headings - see backend\r\n        var filename = response.headers[\"x-suggested-filename\"];\r\n        var filetype = response.headers[\"x-suggested-filetype\"];\r\n\r\n        // var blob = new Blob([response.data], { type: \"image/png\" });\r\n        FileSaver.saveAs(new Blob([response.data]), filename + \".\" + filetype);\r\n      });\r\n    },\r\n    change_file: function(name) {\r\n      this.active_file = name;\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scope>\r\n@import url(\"https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\");\r\n\r\n.dropzone-custom-title {\r\n  margin-top: 0;\r\n  color: #00b782;\r\n}\r\n\r\n.subtitle {\r\n  color: #314b5f;\r\n}\r\n</style>\r\n"],"sourceRoot":"src/components"}]}