{"remainingRequest":"C:\\Users\\My Pc\\Documents\\GitHub\\vue-flask-sqlalchemy-local\\frontend\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\My Pc\\Documents\\GitHub\\vue-flask-sqlalchemy-local\\frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\My Pc\\Documents\\GitHub\\vue-flask-sqlalchemy-local\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\My Pc\\Documents\\GitHub\\vue-flask-sqlalchemy-local\\frontend\\src\\components\\todo_rest.vue?vue&type=template&id=1477d1cd&","dependencies":[{"path":"C:\\Users\\My Pc\\Documents\\GitHub\\vue-flask-sqlalchemy-local\\frontend\\src\\components\\todo_rest.vue","mtime":1559636897772},{"path":"C:\\Users\\My Pc\\Documents\\GitHub\\vue-flask-sqlalchemy-local\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1559590286791},{"path":"C:\\Users\\My Pc\\Documents\\GitHub\\vue-flask-sqlalchemy-local\\frontend\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1559590301540},{"path":"C:\\Users\\My Pc\\Documents\\GitHub\\vue-flask-sqlalchemy-local\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1559590286791},{"path":"C:\\Users\\My Pc\\Documents\\GitHub\\vue-flask-sqlalchemy-local\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1559590301537}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"v-container\",\n    { attrs: { \"grid-list-md\": \"\", \"text-xs-center\": \"\" } },\n    [\n      _c(\n        \"v-layout\",\n        { attrs: { \"align-center\": \"\", \"justify-center\": \"\" } },\n        [\n          _c(\n            \"v-flex\",\n            [\n              _c(\n                \"v-btn\",\n                {\n                  attrs: { large: \"\", dark: \"\", color: \"green\" },\n                  on: {\n                    click: function($event) {\n                      return _vm.read_todo()\n                    }\n                  }\n                },\n                [\n                  _c(\"v-icon\", { attrs: { dark: \"\" } }, [_vm._v(\"refresh\")]),\n                  _vm._v(\"Fetch database\\n      \")\n                ],\n                1\n              )\n            ],\n            1\n          ),\n          _c(\"v-progress-circular\", { attrs: { value: _vm.progress } }),\n          _c(\"span\", [_vm._v(\"Progress so far\")]),\n          _c(\"v-flex\")\n        ],\n        1\n      ),\n      _c(\n        \"v-layout\",\n        { attrs: { \"align-center\": \"\", \"justify-center\": \"\" } },\n        [\n          _c(\n            \"v-flex\",\n            { attrs: { xs8: \"\" } },\n            [\n              _c(\"v-text-field\", {\n                attrs: {\n                  placeholder: \"edit me\",\n                  label: \"New Task\",\n                  clearable: \"\"\n                },\n                on: {\n                  keydown: function($event) {\n                    if (\n                      !$event.type.indexOf(\"key\") &&\n                      _vm._k($event.keyCode, \"enter\", 13, $event.key, \"Enter\")\n                    ) {\n                      return null\n                    }\n                    return _vm.update_todo(\n                      (_vm.id = -1),\n                      (_vm.content = _vm.new_todo),\n                      (_vm.done = false),\n                      (_vm.delete_ = false)\n                    )\n                  }\n                },\n                model: {\n                  value: _vm.new_todo,\n                  callback: function($$v) {\n                    _vm.new_todo = $$v\n                  },\n                  expression: \"new_todo\"\n                }\n              })\n            ],\n            1\n          ),\n          _c(\"v-flex\", { attrs: { xs1: \"\" } }),\n          _c(\n            \"v-flex\",\n            { attrs: { xs1: \"\" } },\n            [\n              _c(\n                \"v-btn\",\n                {\n                  attrs: { small: \"\", fab: \"\", dark: \"\", color: \"teal\" },\n                  on: {\n                    click: function($event) {\n                      return _vm.update_todo(\n                        (_vm.id = -1),\n                        (_vm.content = _vm.new_todo),\n                        (_vm.done = false),\n                        (_vm.delete_ = false)\n                      )\n                    }\n                  }\n                },\n                [_c(\"v-icon\", { attrs: { dark: \"\" } }, [_vm._v(\"add\")])],\n                1\n              )\n            ],\n            1\n          )\n        ],\n        1\n      ),\n      _vm._l(_vm.todos, function(todo) {\n        return _c(\n          \"div\",\n          { key: todo.id },\n          [\n            _c(\n              \"v-layout\",\n              { attrs: { \"align-center\": \"\", \"justify-center\": \"\" } },\n              [\n                _c(\n                  \"v-flex\",\n                  { attrs: { xs8: \"\" } },\n                  [\n                    _c(\"v-text-field\", {\n                      attrs: { label: String(todo.id), disabled: todo.done },\n                      on: {\n                        change: function($event) {\n                          return _vm.update_todo(\n                            (_vm.id = todo.id),\n                            (_vm.content = todo.content),\n                            (_vm.done = todo.done),\n                            (_vm.delete_ = false)\n                          )\n                        }\n                      },\n                      model: {\n                        value: todo.content,\n                        callback: function($$v) {\n                          _vm.$set(todo, \"content\", $$v)\n                        },\n                        expression: \"todo.content\"\n                      }\n                    })\n                  ],\n                  1\n                ),\n                _c(\n                  \"v-flex\",\n                  { attrs: { xs1: \"\" } },\n                  [\n                    _c(\"v-switch\", {\n                      attrs: { label: \"Done?\" },\n                      on: {\n                        change: function($event) {\n                          return _vm.update_todo(\n                            (_vm.id = todo.id),\n                            (_vm.content = todo.content),\n                            (_vm.done = todo.done),\n                            (_vm.delete_ = false)\n                          )\n                        }\n                      },\n                      model: {\n                        value: todo.done,\n                        callback: function($$v) {\n                          _vm.$set(todo, \"done\", $$v)\n                        },\n                        expression: \"todo.done\"\n                      }\n                    })\n                  ],\n                  1\n                ),\n                _c(\n                  \"v-flex\",\n                  { attrs: { xs1: \"\" } },\n                  [\n                    _c(\n                      \"v-btn\",\n                      {\n                        attrs: { small: \"\", fab: \"\", dark: \"\", color: \"error\" },\n                        on: {\n                          click: function($event) {\n                            return _vm.update_todo(\n                              (_vm.id = todo.id),\n                              (_vm.content = \"\"),\n                              (_vm.done = true),\n                              (_vm.delete_ = true)\n                            )\n                          }\n                        }\n                      },\n                      [\n                        _c(\"v-icon\", { attrs: { dark: \"\" } }, [\n                          _vm._v(\"remove\")\n                        ])\n                      ],\n                      1\n                    )\n                  ],\n                  1\n                )\n              ],\n              1\n            )\n          ],\n          1\n        )\n      })\n    ],\n    2\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}