{"remainingRequest":"C:\\Users\\My Pc\\Documents\\GitHub\\vue-flask-sqlalchemy-local\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\My Pc\\Documents\\GitHub\\vue-flask-sqlalchemy-local\\frontend\\src\\components\\todo_comp.vue?vue&type=template&id=04cf0f88&","dependencies":[{"path":"C:\\Users\\My Pc\\Documents\\GitHub\\vue-flask-sqlalchemy-local\\frontend\\src\\components\\todo_comp.vue","mtime":1559245458779},{"path":"C:\\Users\\My Pc\\Documents\\GitHub\\vue-flask-sqlalchemy-local\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\My Pc\\Documents\\GitHub\\vue-flask-sqlalchemy-local\\frontend\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\My Pc\\Documents\\GitHub\\vue-flask-sqlalchemy-local\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\My Pc\\Documents\\GitHub\\vue-flask-sqlalchemy-local\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n<div id=\"todos-vue\">\n  <div>\n    <label>New task:</label>\n    <!-- use v-model for 2-way binding, call method when user press enter @keyup.enter-->\n    <input id=\"new_todo\" v-model=\"new_todo\" placeholder=\"edit me\" @keyup.enter=\"add_todo()\">\n    <button @click=\"add_todo()\">Add</button>\n  </div>\n  <div>\n    <div v-for=\"(todo, index) in todos\" :key=\"todo.id\">\n      <label>{{index}}.</label>\n      <!-- we also want to be able to directly update the existing todo, this is handled by v-model, but our database needs to be handled differently-->\n      <input v-model=\"todo.content\" :disabled=\"todo.done\" @keyup.enter=\"update_todo(todo)\">\n      <!-- when click the checkbox, the input becomes disabled -->\n      <input type=\"checkbox\" v-model=\"todo.done\">\n      <button @click=\"remove_todo(index)\">Delete</button>\n    </div>\n  </div>\n</div>\n",null]}