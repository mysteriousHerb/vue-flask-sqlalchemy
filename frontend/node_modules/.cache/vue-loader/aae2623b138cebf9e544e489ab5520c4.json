{"remainingRequest":"C:\\Users\\My Pc\\Documents\\GitHub\\vue-flask-sqlalchemy\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\My Pc\\Documents\\GitHub\\vue-flask-sqlalchemy\\frontend\\src\\components\\todo_rest.vue?vue&type=template&id=1477d1cd&","dependencies":[{"path":"C:\\Users\\My Pc\\Documents\\GitHub\\vue-flask-sqlalchemy\\frontend\\src\\components\\todo_rest.vue","mtime":1559513276319},{"path":"C:\\Users\\My Pc\\Documents\\GitHub\\vue-flask-sqlalchemy\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\My Pc\\Documents\\GitHub\\vue-flask-sqlalchemy\\frontend\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\My Pc\\Documents\\GitHub\\vue-flask-sqlalchemy\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\My Pc\\Documents\\GitHub\\vue-flask-sqlalchemy\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n<div id=\"todos-vue\">\n  <div>\n    <label>New task:</label>\n    <!-- use v-model for 2-way binding, call method when user press enter @keyup.enter-->\n    <input id=\"new_todo\" v-model=\"new_todo\" placeholder=\"edit me\" @keyup.enter=\"add_todo()\">\n    <button @click=\"update_todo(id=-1, content=new_todo, done=false, delete_=false)\">Add</button>\n  </div>\n  <div>\n    <div v-for=\"(todo) in todos\" :key=\"todo.id\">\n      <label>{{todo.id}}.</label>\n      <!-- we also want to be able to directly update the existing todo, this is handled by v-model, but our database needs to be handled differently-->\n      <input v-model=\"todo.content\" :disabled=\"todo.done\" @keyup.enter=\"update_todo(id=todo.id, content=todo.content, done=todo.done, delete_=false)\">\n      <!-- when click the checkbox, the input becomes disabled -->\n      <!-- use @change rather than @click, the @click event happens too fast that new_val is not sent through  -->\n      <input type=\"checkbox\" v-model=\"todo.done\" @change=\"update_todo(id=todo.id, content=todo.content, done=todo.done, delete_=false)\">\n      <button @click=\"update_todo(id=todo.id, content='', done=true, delete_=true)\">Delete</button>\n    </div>\n    <button @click=\"read_todo()\">read todo</button>\n    <button @click=\"update_todo()\">update todo</button>\n  </div>\n</div>\n",null]}