{"remainingRequest":"C:\\Users\\My Pc\\Documents\\GitHub\\vue-flask-sqlalchemy\\frontend\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\My Pc\\Documents\\GitHub\\vue-flask-sqlalchemy\\frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\My Pc\\Documents\\GitHub\\vue-flask-sqlalchemy\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\My Pc\\Documents\\GitHub\\vue-flask-sqlalchemy\\frontend\\src\\components\\todo_comp.vue?vue&type=template&id=04cf0f88&","dependencies":[{"path":"C:\\Users\\My Pc\\Documents\\GitHub\\vue-flask-sqlalchemy\\frontend\\src\\components\\todo_comp.vue","mtime":1560457583436},{"path":"C:\\Users\\My Pc\\Documents\\GitHub\\vue-flask-sqlalchemy\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1560457563834},{"path":"C:\\Users\\My Pc\\Documents\\GitHub\\vue-flask-sqlalchemy\\frontend\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1560457580482},{"path":"C:\\Users\\My Pc\\Documents\\GitHub\\vue-flask-sqlalchemy\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1560457563834},{"path":"C:\\Users\\My Pc\\Documents\\GitHub\\vue-flask-sqlalchemy\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1560457580480}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", { attrs: { id: \"todos-vue\" } }, [\n    _c(\"div\", [\n      _c(\"label\", [_vm._v(\"New task:\")]),\n      _c(\"input\", {\n        directives: [\n          {\n            name: \"model\",\n            rawName: \"v-model\",\n            value: _vm.new_todo,\n            expression: \"new_todo\"\n          }\n        ],\n        attrs: { id: \"new_todo\", placeholder: \"edit me\" },\n        domProps: { value: _vm.new_todo },\n        on: {\n          keyup: function($event) {\n            if (\n              !$event.type.indexOf(\"key\") &&\n              _vm._k($event.keyCode, \"enter\", 13, $event.key, \"Enter\")\n            ) {\n              return null\n            }\n            return _vm.add_todo()\n          },\n          input: function($event) {\n            if ($event.target.composing) {\n              return\n            }\n            _vm.new_todo = $event.target.value\n          }\n        }\n      }),\n      _c(\n        \"button\",\n        {\n          on: {\n            click: function($event) {\n              return _vm.add_todo()\n            }\n          }\n        },\n        [_vm._v(\"Add\")]\n      )\n    ]),\n    _c(\n      \"div\",\n      _vm._l(_vm.todos, function(todo, index) {\n        return _c(\"div\", { key: todo.id }, [\n          _c(\"label\", [_vm._v(_vm._s(index) + \".\")]),\n          _c(\"input\", {\n            directives: [\n              {\n                name: \"model\",\n                rawName: \"v-model\",\n                value: todo.content,\n                expression: \"todo.content\"\n              }\n            ],\n            attrs: { disabled: todo.done },\n            domProps: { value: todo.content },\n            on: {\n              keyup: function($event) {\n                if (\n                  !$event.type.indexOf(\"key\") &&\n                  _vm._k($event.keyCode, \"enter\", 13, $event.key, \"Enter\")\n                ) {\n                  return null\n                }\n                return _vm.update_todo(todo)\n              },\n              input: function($event) {\n                if ($event.target.composing) {\n                  return\n                }\n                _vm.$set(todo, \"content\", $event.target.value)\n              }\n            }\n          }),\n          _c(\"input\", {\n            directives: [\n              {\n                name: \"model\",\n                rawName: \"v-model\",\n                value: todo.done,\n                expression: \"todo.done\"\n              }\n            ],\n            attrs: { type: \"checkbox\" },\n            domProps: {\n              checked: Array.isArray(todo.done)\n                ? _vm._i(todo.done, null) > -1\n                : todo.done\n            },\n            on: {\n              change: function($event) {\n                var $$a = todo.done,\n                  $$el = $event.target,\n                  $$c = $$el.checked ? true : false\n                if (Array.isArray($$a)) {\n                  var $$v = null,\n                    $$i = _vm._i($$a, $$v)\n                  if ($$el.checked) {\n                    $$i < 0 && _vm.$set(todo, \"done\", $$a.concat([$$v]))\n                  } else {\n                    $$i > -1 &&\n                      _vm.$set(\n                        todo,\n                        \"done\",\n                        $$a.slice(0, $$i).concat($$a.slice($$i + 1))\n                      )\n                  }\n                } else {\n                  _vm.$set(todo, \"done\", $$c)\n                }\n              }\n            }\n          }),\n          _c(\n            \"button\",\n            {\n              on: {\n                click: function($event) {\n                  return _vm.remove_todo(index)\n                }\n              }\n            },\n            [_vm._v(\"Delete\")]\n          )\n        ])\n      }),\n      0\n    )\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}