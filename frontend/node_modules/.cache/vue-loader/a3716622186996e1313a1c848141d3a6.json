{"remainingRequest":"C:\\Users\\herbz\\Documents\\GitHub\\vue-flask-sqlalchemy\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\herbz\\Documents\\GitHub\\vue-flask-sqlalchemy\\frontend\\src\\components\\todo_rest.vue?vue&type=template&id=382fceda&","dependencies":[{"path":"C:\\Users\\herbz\\Documents\\GitHub\\vue-flask-sqlalchemy\\frontend\\src\\components\\todo_rest.vue","mtime":1560114412647},{"path":"C:\\Users\\herbz\\Documents\\GitHub\\vue-flask-sqlalchemy\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1560092139521},{"path":"C:\\Users\\herbz\\Documents\\GitHub\\vue-flask-sqlalchemy\\frontend\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1560092199289},{"path":"C:\\Users\\herbz\\Documents\\GitHub\\vue-flask-sqlalchemy\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1560092139521},{"path":"C:\\Users\\herbz\\Documents\\GitHub\\vue-flask-sqlalchemy\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1560092199284}],"contextDependencies":[],"result":["\n<div>\n  <v-container grid-list-md text-xs-center>\n    <v-layout align-center justify-center>\n      <v-flex>\n        <v-btn large dark color=\"green\" @click=\"read_todo()\">\n          <v-icon dark>refresh</v-icon>Fetch database\n        </v-btn>\n      </v-flex>\n      <v-progress-circular :value=\"progress\"></v-progress-circular>\n      <span>Progress so far</span>\n      <v-flex></v-flex>\n    </v-layout>\n\n    <v-layout align-center justify-center>\n      <v-flex xs8>\n        <!-- use v-model for 2-way binding, call method when user press enter @keyup.enter-->\n        <!-- <v-text-field v-model=\"new_todo\" placeholder=\"edit me\" @keyup.enter=\"add_todo()\"> -->\n        <v-text-field\n          v-model=\"new_todo\"\n          placeholder=\"edit me\"\n          label=\"New Task\"\n          clearable\n          @keydown.enter=\"update_todo(id=-1, content=new_todo, done=false, delete_=false)\"\n        ></v-text-field>\n      </v-flex>\n      <v-flex xs1/>\n      <v-flex xs1>\n        <v-btn\n          small\n          fab\n          dark\n          color=\"teal\"\n          @click=\"update_todo(id=-1, content=new_todo, done=false, delete_=false)\"\n        >\n          <v-icon dark>add</v-icon>\n        </v-btn>\n      </v-flex>\n    </v-layout>\n\n    <div v-for=\"(todo) in todos\" :key=\"todo.id\">\n      <v-layout align-center justify-center>\n        <v-flex xs8>\n          <!-- we also want to be able to directly update the existing todo, this is handled by v-model, but our database needs to be handled differently-->\n          <v-text-field\n            v-model=\"todo.content\"\n            :label=\"String(todo.id)\"\n            :disabled=\"todo.done\"\n            @change=\"update_todo(id=todo.id, content=todo.content, done=todo.done, delete_=false)\"\n          />\n        </v-flex>\n        <v-flex xs1>\n          <!-- when click the checkbox, the input becomes disabled -->\n          <!-- use @change rather than @click, the @click event happens too fast that new_val is not sent through  -->\n          <v-switch\n            v-model=\"todo.done\"\n            label=\"Done?\"\n            @change=\"update_todo(id=todo.id, content=todo.content, done=todo.done, delete_=false)\"\n          />\n        </v-flex>\n        <v-flex xs1>\n          <v-btn\n            small\n            fab\n            dark\n            color=\"error\"\n            @click=\"update_todo(id=todo.id, content='', done=true, delete_=true)\"\n          >\n            <v-icon dark>remove</v-icon>\n          </v-btn>\n        </v-flex>\n      </v-layout>\n    </div>\n  </v-container>\n</div>\n",null]}