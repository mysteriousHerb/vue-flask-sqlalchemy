/**
 * @license
 * Copyright 2017 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
import { Features } from './environment_util';
import { Tensor } from './tensor';
import { TypedArray } from './types';
export declare const WEBGL_ENVS: Features;
export declare const PACKED_ENVS: Features;
export declare const NODE_ENVS: Features;
export declare const CHROME_ENVS: Features;
export declare const BROWSER_ENVS: Features;
export declare const CPU_ENVS: Features;
export declare const ALL_ENVS: Features;
export declare function expectArraysClose(actual: Tensor | TypedArray | number[], expected: Tensor | TypedArray | number[] | boolean[] | number | boolean, epsilon?: number): void;
export interface DoneFn {
    (): void;
    fail: (message?: Error | string) => void;
}
export declare function expectPromiseToFail(fn: () => Promise<{}>, done: DoneFn): void;
export declare function expectArraysEqual(actual: Tensor | TypedArray | number[] | string[], expected: Tensor | TypedArray | number[] | boolean[] | string[] | number | boolean | string): void;
export declare function expectNumbersClose(a: number, e: number, epsilon?: number): void;
export declare function expectValuesInRange(actual: Tensor | TypedArray | number[], low: number, high: number): void;
export declare function expectArrayBuffersEqual(actual: ArrayBuffer, expected: ArrayBuffer): void;
